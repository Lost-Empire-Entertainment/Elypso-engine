0.1.3.0001:

- fixed compiler, engine, hub and game not correctly compiling to debug mode
- added DEBUG window title tag to compiler, engine, hub and game if it compiled in debug mode

0.1.3.0002:

- added brand new completely separate physics library made by me
- rigidbody component
- box and sphere collider attached to rigidbody
- change mass, restitution, static friction, dynamic friction, gravity factor, gravity toggle, dynamic toggle in rigidbody component in inspector
- any gameobject with rigidbody collides with any gameobject with rigidbody component and they dont go through each other
- rigidbody gameobjects have linear and angular velocity
- rigidbody gameobjects have friction when colliding with other rigidbody gameobjects
- audio no longer "continues playing" if it has reached its end
- when assigning scene, texture, audio file or model the file hierarchy list now also shows file extension

0.1.3.0003:
- added collapsible headers to inspector
- added Enable/Disable physics button to the center of the top menu bar
- no longer forced to have CMake, Ninja and Visual Studio installed to open the engine
- a warning popup is created if user tries to compile or clean rebuild game if CMake, Ninja and Visual Studio are not installed and added to USER/SYSTEM path on windows
- a warning popup is created if user tries to run game which has not been created properly yet, removed the console error message for it
- reusing the Run function in compile.cpp to check for invalid paths after game is compiled
- fixed impulse and torque debug buttons
- fixed a bug that affected other non-rigidbodies if a rigidbody gameobject had its usegravity and isdynamic set to true

0.1.3.0004:
- small fix that allows moving, rotating and scaling rigidbody if isDynamic is true but physics simulation is off
- added modifyable gravity, angular damping, low angular velocity factor, friction multiplier, correction factor and minimum penetration factor to settings into physics tab and to scene file
- now displaying center of gravity in rigidbody component
- replaced default model and skybox textures
- can now set global ambient color and intensity in settings inside graphics tab, they are saved to scene file
- renamed settings other tab to game
- overhauled scene file save and load system to be more similar to config file
- scene camera is only accessible in the engine, user needs to create their own camera to see anything in game, this is also saved and loaded as a separate gameobject, can switch between created cameras and scene camera in engine
- save audio play/stop state to gameobject

0.1.3.0005:
- made selected object border thicker so its more visible
- added back shininess slider
- created a new gameobject type for audio component with its own audio icon
- added missing rigidbody component that gets copied and pasted alongside gameobject and its other components
- fixed a crash that occured when adding a light component to a empty gameobject
- fixed an issue that added back light component to empty gameobject if it was removed and the scene was reloaded
- fixed dynamic rigidbody with gravity enabled not moving in game

0.1.3.0006:
- actually added audio gameobject with its own icon for real this time
- added camera gameobject with its own icon
- minor linux compatibility fixes
- limit camera, light and audio components to empty gameobject only, cannot add more than one of those to it
- copy attached audio file to audio object folder
- can play multiple songs at the same time
- no longer importing files in audio folder
- can remove attached audio file from audio object
- moved billboard and border bool checks from scene window right panel to settings window graphics tab
- saving billboard and border checks in config file instead of scene file

0.1.3.0007:
- engine and game can run even if there is no camera
- removed old camera scripts and moved their content to cameraobject and cameracomponent scripts
- engine always creates a scene camera and switches to it by default when scene is opened
- can toggle between scene camera and user-created cameras
- can set player camera in settings window game tab, without this the game will not have an active camera
- qqq console command bypasses save check
- fixed game not printing engine messages to game console
- enable debug console messages by default in engine or game debug version
- improved gameobject save file formatting
- saving scene camera data to scene file only in engine
- delete old gameobject save file if object was renamed in inspector, mark scene as unsaved
- deny changing selected gameobject name to any reserved name used by gameobjects not created by end user
- deny setting imported asset name to any reserved name used by gameobjects not created by end user
- kalaphysics now properly handles wall collisions
- improved console commands system by allowing to easily add any new commands to console in either engine or game source code
- decreased minimum allowed window scale for engine and game
- increased max and decreased min compiler window allowed scale in engine
- returned back to old gameobject.txt for each gameobject txt file name instead of naming each gameobject txt file name as the name of the actual gameobject

0.1.3.0008:
- fixed mesh component height in inspector for empty gameobject
- fixed light component height in inspector for point, spot and directional lights
- added mesh type to mesh component in inspector for all gameobjects
- fixed light type icon not updating correctly if light type was changed from inspector
- fixed light icon type staying after light component was removed from gameobject from inspector
- fixed audio files not being deletable in project hierarchy audio folder
- fixed volume slider in audio component in inspector not being draggable like min and max range while 3D audio is enabled
- fixed audio, camera, point, spot and dir light gameobject staying after deleting it - billboard was deleted but the gameobject stayed and trying to save caused a crash
- engine, engine library, game and hub no longer need to be rebuilt every time

0.1.3.0009:
- completely scrapped all old object interaction and added imguizmo
- deleted old object interaction textures
- removed x, y, z buttons in the top of the scene window
- added world/local button next to move, scale and rotate
- pressing key of currently selected mode toggles between world and local object move/rotate/scale
- fixed a small issue with compiling in clean mode on windows
- all models can now cast shadows
- added shadow cast toggle to inspector to the top material component
- moved transparency toggle and strength above texture assign slots and below shadow cast toggle in inspector for material component